全局/静态存储区域：存全局变量，静态变量。程序编译时内存已分配好，
并存在于程序整个运行期间，程序结束后由系统统一释放
全局变量和静态变量被分配到同一块内存中。
C 语言中，全局变量又分为初始化的和未初始化的。初始化的全局变量和静态变量在一块区域，
未初始化的全局变量与静态变量在相邻的另一块区域。同时未被初始化的对象存储区可以通过 void* 来访问和操纵，
程序结束后由系统自行释放。
在 C++ 里面没有区分，他们共同占用同一块内存区。
栈：存放函数的参数值，局部变量，函数执行结束时会被自动释放。
栈内存分配运算内置于处理器的指令集中，效率高，但是容量有限。
堆（动态内存分配）：通过new和malloc由低到高分配，由delete或free手动释放或者程序结束自动释放。
动态内存的生存期人为决定，使用灵活。缺点是容易分配/释放不当容易造成内存泄漏，频繁分配/释放会产生大量内存碎片。 若程序员不释放，程序结束时可能由OS（操作系统）回收
字符/文字常量区： 存放常量字符串，程序结束时由系统释放
程序代码区： 存放函数体的二进制代码
