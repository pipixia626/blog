static 关键字的作用
1.全局静态变量
在全局变量前加上关键字static，全局变量就定义成一个全局静态变量
静态存储区，在整个程序运行期间一直存在
初始化：自动初始化：0
作用域：全局静态变量从定义之处开始到文件结尾

2.局部静态变量：
内存中的位置：静态存储区
初始化：0
作用域：定义它的函数或者语块结束的时候，作用域结束，但是当局部静态变量离开后，并没有被销毁，而是仍然住在内存中，直到函数再次被
被调用，值不变。
3.静态函数
在函数返回类型前加static
只在本cpp内使用，不会同其他同名函数起冲突，函数默认都是extern的
4.类的静态成员
在类中，静态成员可以实现多个对象之间的数据共享，并且使用静态成员还不会破坏隐藏的规则，静态成员是类的所有对象中共享的成员而不是某个对象
的成员
5.类的静态函数
都是属于类的静态成员，它们都不是对象成员，因此引用的时候不需要对象名

C/C++区别
设计思想：面向对象/面向过程
语法：C++具有封装，继承和多态三种特性
C++比C增加多许多安全功能，如强制类型转换
C++支持范式编程，比如模板类，函数模板等

四种cast转换
1、const_cast
用于将const变量转变尾非const
2、static_cast用于各种隐式转换如非const转const,void*转指针，只能用于多态向上转换，向下不保证安全
3、dynamic_cast
动态类型转换，只能用于含有虚函数的类，用于层次间的向上和向下转换
只能转指针或引用，向下转化时，如果是非法的对于指针返回空
4、reinterpret_cast
类型的二进制重新解释，一般用的少

指针和引用的区别
1、针有自己一块空间，而引用只是一个别名
2、指针可以被初始化NULL，而引用必须被初始化且必须是一个已有的自己的对象的引用
3、指针作为参数传递时，需要被解引用才对对象进行操作，而直接引用的修改会改变所有引用所指向的对象
4、指针可以有const
5、指针在使用中可以指向其他对象，但是引用只能是一个对象的引用，不能被改变

智能指针：
为什么要使用智能指针：
智能指针的作用是管理一个指针，因为存在以下情况：
主要用于管理在堆上分配的内存，将普通的指针封装成一个栈对象申请的空间在函数结束时忘记释放，造成内存泄漏。使用智能指针可以很大程度上的避免这个问题
智能指针是一个类，当超出了类的作用域，类就会自动调用析构函数，就会自动调用析构函数释放资源
shared_ptr
多个智能指针可以指向相同的对象，该对象和其相关资源会在最后一个引用被销毁时释放，采用计数机制
weak_ptr解决shared_ptr相互引用时引发的死锁问题。它是对对象的一种弱引用，不会增加对象的引用计数，和shared_ptr之间可以相互转化，shared_ptr可以直接赋值给它，它可以通过调用lock函数来获得shared_ptr。

野指针：指向一个已删除的对象或者未申请访问受限内存区域的指针

